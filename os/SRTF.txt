/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
class Process
{
    public:
    int pid;
    int at;
    int bt;
    int rt;
    int ct;
    int tat;
    
    void initialize(int p,int a,int b)
    {
        pid=p;
        at=a;
        bt=b;
        rt=b;
        ct=-1;
        tat=-1;
    }
};
int main()
{
    int n;
   cout<<"ENTER NO OF PROCESSES"<<endl;
   cin>>n;
    Process arr[n];
    float waiting=0;
    for (int i=0;i<n;i++)
    {
        int p,a,b;
        cin>>p>>a>>b;
        arr[i].initialize(p,a,b);
    }
    
    int currenttime=0;
    int completed=0;
    while (completed!=n)
    {
        
        int index=-1;
        int maxi=1000000;
        for (int i=0;i<n;i++)
        {
            if (arr[i].rt<=0 || arr[i].at>currenttime)
            continue;
            if (arr[i].rt<maxi)
            {
                maxi=arr[i].rt;
                index=i;
            }
            else if (arr[i].rt==maxi)
            {
                if (arr[i].at<arr[index].at)
                {
                    index=i;
                }
                else if (arr[i].pid<arr[index].pid)
                {
                    index=i;
                }
                
            }
        }
        if (index==-1)
        {
            currenttime++;
            continue;
        }
        currenttime++;
        arr[index].rt-=1;
        if (arr[index].rt==0)
        {
            completed++;
            arr[index].ct=currenttime;
            arr[index].tat=arr[index].ct-arr[index].at;
            waiting+=arr[index].tat-arr[index].bt;
        }
        
        
    }
    cout<<waiting/n<<endl;

    return 0;
}
